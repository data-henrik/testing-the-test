inputs:
- type: git
  branch: ${GIT_BRANCH}
  path: .tekton
  service: repo
properties:
- name: GIT_REPO
  value: ${GIT_REPO_URL} 
  type: text 
- name: GIT_BRANCH
  value: ${GIT_BRANCH}
  type: text 
- name: API_KEY
  value: ${API_KEY}
  type: SECURE
- name: REGISTRY_REGION_ID
  value: ${REGISTRY_REGION_ID}
  type: text 
- name: REGISTRY_NAMESPACE
  value: ${REGISTRY_NAMESPACE}
  type: text 
- name: SCHEMATICS_WORKSPACE_NAME
  value: ${WORKSPACE_NAME}
  type: text 
- name: IMAGE_NAME
  value: ${IMAGE_NAME}
  type: text 
- name: TARGET_REGION_ID
  value: ${TARGET_REGION_ID}
  type: text 
- name: TARGET_RESOURCE_GROUP
  value: ${TARGET_RESOURCE_GROUP}
  type: text 
- name: COS_PLAN
  value: "lite"
  type: text 
- name: APP_ID_PLAN
  value: "lite"
  type: text 
- name: CLOUDANT_PLAN
  value: "lite"
  type: text 
triggers:
- eventListener: BUILD-DEPLOY-two-task
  branch: master
  events:
    push: true
  name: git-BUILD-DEPLOY-two-task
  properties: []
  type: git
  service: repo
- eventListener: BUILD
  name: BUILD
  type: manual
- eventListener: DEPLOY
  name: DEPLOY
  type: manual
- eventListener: BUILD-DEPLOY-two-task
  name: BUILD-DEPLOY-two-task
  type: manual
- eventListener: BUILD-DEPLOY-one-task
  name: BUILD-DEPLOY-one-task
  type: manual
- eventListener: ROTATE_STORAGE_CREDENTIALS
  name: ROTATE_STORAGE_CREDENTIALS
  type: manual
- eventListener: ROTATE_APPID_CREDENTIALS
  name: ROTATE_APPID_CREDENTIALS
  type: manual
- eventListener: ROTATE_REGISTRY_CREDENTIALS
  name: ROTATE_REGISTRY_CREDENTIALS
  type: manual
- eventListener: UNINSTALL
  name: UNINSTALL
  type: manual