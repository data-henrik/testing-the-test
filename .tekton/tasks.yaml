# Tasks
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: detect-change-task
spec:
  results:
    - name: is_app
      description: changed files belong to app
    - name: is_toolchain
      description: changed files belong to toolchain
  workspaces:
    - name: task-workspace
      mountPath: /working
  params:
    - name: toolchain-dirs
    - name: app-dirs
    - name: generic-dirs
      type: array
  steps:
    - name: execute-script
      image: ibmcom/pipeline-base-image:2.9
      envFrom:
        - configMapRef:
            name: environment-properties
        - secretRef:
            name: secure-properties
      env:
        - name: toolchaindirs
          value: $(params.toolchain-dirs)
        - name: appdirs
          value: $(params.app-dirs)
        - name: genericdirs
          value: $(params.generic-dirs)
      command: ["/bin/bash", "-c"]
      args:
        - |
          cd /working
          # get the right repo and branch
          if [ -z $GIT_BRANCH ]; then
            git clone -q $GIT_REPO .
          else
            git clone -q -b $GIT_BRANCH $GIT_REPO .
          fi
          # check for changed directories
          changed_directories=$(git log --format= -n 1 --name-only | grep / | awk 'BEGIN {FS="/"} {print $1}' | uniq)
          #echo "changed_directories:\n$changed_directories"
          # check if it is toolchain-related
          echo "toolchain?"
          printf false | tee $(results.is_toolchain.path)
          for d in ${toolchaindirs[@]}; do
            if [[ " ${changed_directories[@]} " =~ "${d}" ]]; then
              printf true | tee $(results.is_toolchain.path)
              break
            fi
          done
          # check if it is app-related
          echo "app?"
          printf false | tee $(results.is_app.path)
          for d in ${appdirs[@]}; do
            if [[ " ${changed_directories[@]} " =~ "${d}" ]]; then
              printf true | tee $(results.is_app.path)
              break
            fi
          done
          echo "generic=$genericdirs"

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: print-changed-paths
spec:
  workspaces:
    - name: task-workspace
      mountPath: /working
  params:
    - name: mystring
  steps:
    - name: print-changed-paths
      image: bash:latest
      env:
        - name: mystring
          value: $(params.mystring)
      script: |
        #!/usr/bin/env bash
        env
        echo "mystring=$mystring"